frontend: a bunch of static variables (input_format, swapbytes,
          silent, brhist, update_inteval) are set in parse_args and used in
          get_audio.  should be cleaned up.



1.
Does stdin work when LAME is compiled to use libsndfile? 
(new version of libsndfile will support this - try this out)


2. 
LAME has problems with pure DC input.  i.e. a square wave with
a frequency well below 20 Hz.  Not very important, but it should
be fixed.


3. 
modify mpglib to output
floating point and have finaly quantization step a
easy-to-change module so it can output other than 16bit.

4.
Clipping detection.  Compute statistics for input near 2^15, 
(should be done in fill_buffer() in util.c).  Have command
line encoder print statistics about % of samples which might
end up clipped.

Better: do a full decode - but this seems too expensive. 


5.
lowpass filter: for M/S stereo, use more filtering for the side
channel, less filtering for mid channel.  We need to first replace
the polyphase filter with an FIR lowpass filter with finer frequency
resolution before implementing this. 

6. 
LAME has a 31 point FIR filter used for resampling, which
can also be used as a lowpass.  When resampling is done, 
use that filter to also lowpass instead of the polyphase filter.

7.
Even when resampling is not needed, should we use an FIR filter
for the lowpass?  If it is not too much slower, yes.  If it
is slower, then it should be an option since it will produce
higher quality.  







997..
ACM wrapper for LAME.

Contact "Florian Bruckner" <h9651030@miraculix.wu-wien.ac.at> for info - 
he is working on the VorbisACM.

998.
Merge GOGO's fast assembler routines.


999.
It would be nice to save some information whilst encoding
a: wave -> mp3
	a RIFF/wave can contain LIST chunks with information
	about author, title, etc. 
	==> could go into TAG fields of resulting mp3
b: mp3 -> mp3
	==> we could copy the TAG directly
c: mp3 <-> ogg
	==> copy TAG info into oggs info field and vice versa
d: mp3 -> wave
	==> copy TAG into LIST chunk
