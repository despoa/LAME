************************************************************************
LAME API

For a general outline of the code, see the file API.  
Also, main.c is a simple front end to libmp3lame.a

The guts of the code are called from lame_encode_buffer().

lame_encode_buffer() handles buffering, resampling, filtering, and
then calls lame_encode_frame() for each frame:

lame_encode_frame():
   l3psycho_anal()        compute masking thresholds
   mdct_sub()             compute MDCT coefficients
   iteration_loop()       choose scalefactors (via iteration)
                          which determine noise shapping, and 
                          choose best huffman tables for lossless compression

   III_formatBitstream    format the bitstream and store in bit_buffer
   copy_buffer()          make a copy of bit_buffer, to return to calling program
   write_buffer()         optionally output bit_buffer to a file
   empty_buffer()	  mark bit_buffer as empty





************************************************************************
We are in the process of switching the whole code to FLOAT or FLOAT8,
which ever is faster (defined in machine.h).  
Avoid using float or double, and instead use:

FLOAT    4 byte floating point.  
FLOAT8   8 byte floating point (only when necessary)

















